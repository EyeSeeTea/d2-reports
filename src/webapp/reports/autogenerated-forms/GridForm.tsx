import React from "react";
import {
    DataTable,
    TableHead,
    DataTableRow,
    DataTableColumnHeader,
    TableBody,
    DataTableCell,
    // @ts-ignore
} from "@dhis2/ui";
import { TableFormViewModelM } from "./GridFormViewModel";
import { DataFormInfo } from "./AutogeneratedForm";
import { Section } from "../../../domain/common/entities/DataForm";
import { DataElementItem } from "./DataElementItem";
import { makeStyles } from "@material-ui/core";

/*
 * Convert data forms into table, using "-" as a separator. An example:
 *
 *    - ITNs - Basic - Written Policy
 *    - ITNs - Basic - Policy Implemented
 *    - ITNs - Extended - Written Policy
 *    - ITNs - Extended - Policy Implemented
 *
 *    This will create this table:
 *
 *    ITNs            | Written Policy | Policy Implemented |
 *    ITNs - Basic    |                |                    |
 *    ITNs - Extended |                |                    |
 **/

export interface GridFormProps {
    dataFormInfo: DataFormInfo;
    section: Section;
}

const GridForm: React.FC<GridFormProps> = props => {
    const { dataFormInfo } = props;
    const section = React.useMemo(() => TableFormViewModelM.get(props.section), [props.section]);
    const classes = useStyles();

    return (
        <div key={`table-${section.id}`} className={classes.wrapper}>
            <DataTable className={classes.table}>
                <TableHead>
                    <DataTableRow>
                        <DataTableColumnHeader width="400px">
                            <span className={classes.header}>{section.name}</span>
                        </DataTableColumnHeader>

                        {section.columns.map(column => (
                            <DataTableColumnHeader key={`column-${column.name}`}>
                                <span>{column.name}</span>
                            </DataTableColumnHeader>
                        ))}
                    </DataTableRow>
                </TableHead>

                <TableBody>
                    {section.rows.map(row => (
                        <DataTableRow key={`policy-${row.name}`}>
                            <DataTableCell>
                                <span>{row.name}</span>
                            </DataTableCell>

                            {row.items.map((item, idx) =>
                                item.dataElement ? (
                                    <DataTableCell key={item.dataElement.id}>
                                        <DataElementItem dataElement={item.dataElement} dataFormInfo={dataFormInfo} />
                                    </DataTableCell>
                                ) : (
                                    <DataTableCell key={`cell-${idx}`}></DataTableCell>
                                )
                            )}
                        </DataTableRow>
                    ))}
                </TableBody>
            </DataTable>
        </div>
    );
};

const useStyles = makeStyles({
    wrapper: { margin: 10 },
    header: { fontSize: "1.4em", fontWeight: "bold" as const },
    table: { borderWidth: "3px !important" },
});

export default React.memo(GridForm);
